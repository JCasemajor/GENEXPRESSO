packages.cran <- c("devtools","data.table","NanoStringNorm","pheatmap","nanostringr","ggrepel")
packages.bioC <- c("limma","GEOquery","DESeq2","vsn")
installed <- rownames(installed.packages())
packages.cran <- packages.cran[!packages.cran%in%installed]
packages.bioC <- packages.bioC[!packages.cran%in%installed]
if (length(packages.cran)>0){
install.packages(packages.cran,dependencies=TRUE)
}
if (!requireNamespace("nanoR", quietly = TRUE)){
install.packages("~/nanoR",repos=NULL,type="source")
}
if (!requireNamespace("NAPPA", quietly = TRUE)){
install.packages("~/GIT/CPRD/NAPPA_2.0.tar.gz",repos=NULL,type="source")
}
if (!requireNamespace("NAPPA", quietly = TRUE)){
install.packages("~/GIT/CPRD/NAPPA_2.0.tar.gz",repos=NULL,type="source")
}
if (length(packages.cran)>0){
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(packages.bioC)
}
if (length(packages.cran)>0){
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(packages.bioC)
}
if (!requireNamespace("ggbiplot", quietly = TRUE)) {
library(devtools)
install_github("vqv/ggbiplot")
}
if (!requireNamespace("UpSetR", quietly = TRUE)){
install.packages("UpSetR")
}
if (!requireNamespace("reshape2", quietly = TRUE)){
install.packages("reshape2")
}
if (!requireNamespace("WGCNA", quietly = TRUE)){
BiocManager::install("WGCNA")
}
if (!requireNamespace("RankProd", quietly = TRUE)){
BiocManager::install("RankProd")
}
if (!requireNamespace("NAPPA", quietly = TRUE)){
install.packages("~/GIT/CPRD/NAPPA_2.0.tar.gz",repos=NULL,type="source")
}
install.packages("C:\Users\Antonin COLAJANNI\Desktop\CPRD\CPRD-main\NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages("\Users\Antonin COLAJANNI\Desktop\CPRD\CPRD-main\NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages("Users\Antonin COLAJANNI\Desktop\CPRD\CPRD-main\NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages("CPRD\CPRD-main\NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages("C:\Users\Antonin COLAJANNI\Desktop\CPRD\CPRD-main\NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages("C:/Users/Antonin\ COLAJANNI/Desktop/CPRD/CPRD-main/NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages("vsn")
if (length(packages.cran)>0){
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(packages.bioC)
}
install.packages("BiocManager")
install.packages("BiocManager")
if (length(packages.cran)>0){
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(packages.bioC)
}
if (!requireNamespace("ggbiplot", quietly = TRUE)) {
library(devtools)
install_github("vqv/ggbiplot")
}
if (!requireNamespace("UpSetR", quietly = TRUE)){
install.packages("UpSetR")
}
install.packages("C:/Users/Antonin\ COLAJANNI/Desktop/CPRD/CPRD-main/NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages(vsn)
install.packages("vsn")
install.packages("vsn")
install.packages("bioconductor")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("vsn")
install.packages("C:/Users/Antonin\ COLAJANNI/Desktop/CPRD/CPRD-main/NAPPA_2.0.tar.gz", repos = NULL, type="source")
install.packages("~/nanoR",repos=NULL,type="source")
git clone https://github.com/KevinMenden/nanoR.git
install.packages("nanoR/",repos=NULL,type="source")
# Nom               : coexpr.R
# Type              : Programme
# Objet             : Analyse coexpression Pearson + WGCNA
# Input             : Dataset (microarray, RNA-seq, Nanostring)
# Output            : iplot
# Auteur            : Antonin COLAJANNI
# R version         : 3.6
# Date de creation  : 16.04.2021
#______________________________________________________________________________
library("reshape2")
#install.packages('igraph')
library('igraph')
if (!requireNamespace("igraph", quietly = TRUE)){
BiocManager::install("igraph")
}
source(file.path("./SCRIPT","functions.R"))
if (!requireNamespace("factoextra", quietly = TRUE)){
BiocManager::install("factoextra")
}
if (!requireNamespace("FactoMineR", quietly = TRUE)){
BiocManager::install("FactoMineR")
}
if (!requireNamespace("FactoMineR", quietly = TRUE)){
BiocManager::install("FactoMineR")
}
if (!requireNamespace("GEOquery", quietly = TRUE)){
BiocManager::install("GEOquery")
}
source(file.path("./SCRIPT","functions.R"))
if (!requireNamespace("edgeR", quietly = TRUE)){
BiocManager::install("edgeR")
}
source(file.path("./SCRIPT","functions.R"))
if (!requireNamespace("DEFormats", quietly = TRUE)){
BiocManager::install("DEFormats")
}
source(file.path("./SCRIPT","functions.R"))
if (!requireNamespace("DESeq", quietly = TRUE)){
BiocManager::install("DESeq")
}
if (!requireNamespace("DESeq", quietly = TRUE)){
BiocManager::install("DESeq")
}
source(file.path("./SCRIPT","functions.R"))
if (!requireNamespace("DESeq2", quietly = TRUE)){
BiocManager::install("DESeq2")
}
source(file.path("./SCRIPT","functions.R"))
source(file.path("./SCRIPT","functions.R"))
source(file.path("~/GIT/CPRD/GEOlimma/","DE_source.R"))
# go to the directory you downloaded
setwd("~/GIT/CPRD")
setwd("~/GitHub/CPRD")
source(file.path("~/GIT/CPRD/GEOlimma/","DE_source.R"))
